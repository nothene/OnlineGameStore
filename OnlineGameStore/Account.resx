<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABFGAAARRgFJCklrAAAAB3RJ
        TUUH4wsGFy0xZiJCYQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAACqSURBVChT
        fdA9DgFBHIbxIUTt4wJEIREU22gUHIZCQyG0m0i22IJKs7dQ+Cg4BFfQcArPO7OZZBSe5JfMP7ubmVmT
        N8YFz9wRQwRNcMcMLbSxwA0D+K6YumXQCgcU7UTaqumWQT2cUbMTPaAtf+vjhKqdSMPcLYM22KFgJxpB
        l9EFOuhijQ+2KMEXIYN+kc61R4o3lijDpy8bqEM31UNtr5dj/K2CxBjz+gLR4BqfdwTwygAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>